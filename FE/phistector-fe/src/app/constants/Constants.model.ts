export const DMARC_P_TAG = "Demonstrates the policy for domain (or requested handling policy). It directs the receiver to report, quarantine, or reject emails that fail authentication checks. Policy options are: 1) None 2) Quarantine or 3) Reject.";
export const DMARC_PCT_TAG = "Specifies the percentage of email messages subjected to filtering. For example, pct=25 means a quarter of your companyâ€™s emails will be filtered by the recipient.";
export const DMARC_RUA_TAG = "Designed for reporting URI(s) for aggregate data. An rua example is rua=mailto:CUSTOMER@for.example.com.";
export const DMARC_RUF_TAG = "Directs addresses to which message-specific forensic information is to be reported (i.e., comma-separated plain-text list of URIs). An ruf example is ruf=mailto:CUSTOMER@for.example.com.";
export const DMARC_FO_TAG = "Pertains to how forensic reports are created and presented to DMARC users.";
export const DMARC_ASPF_TAG = "Represents alignment mode for SPF. An optional tag, aspf=r is a common example of its configuration.";
export const DMARC_ADKIM_TAG = "Alignment mode for the DKIM protocol. A sample tag is adkim=r.";
export const DMARC_RF_TAG = "Forensic reporting format(s) is declared by the DMARC rf tag.";
export const DMARC_RI_TAG = "Corresponds to the aggregate reporting interval and provides DMARC feedback for the outlined criteria.";
export const DMARC_SP_TAG = "Represents the requested handling policy for subdomains.";
export const DMARC_RECORD_PUBLISHED_SUCCESS = "DMARC Record found";
export const DMARC_RECORD_PUBLISHED_FAIL = "DMARC Record not found";
export const DMARC_SYNTAX_CHECK_SUCCESS = "Record syntax is valid";
export const DMARC_SYNTAX_CHECK_FAIL = "Record syntax is not valid";
export const DMARC_EXTERNAL_VALIDATION_SUCCESS = "All external domains in your DMARC record are giving permission to send them DMARC reports";
export const DMARC_EXTERNAL_VALIDATION_FAIL = "Not all external domains in your DMARC record are giving permission to send them DMARC reports";
export const DMARC_MULTIPLE_RECORDS_SUCCESS = "Multiple DMARC records corrected to a single record.";
export const DMARC_MULTIPLE_RECORDS_FAIL = "Multiple DMARC records found";
export const DMARC_POLICY_ENABLED_SUCCESS = "DMARC Quarantine/Reject policy enabled";
export const DMARC_POLICY_ENABLED_FAIL = "DMARC Quarantine/Reject policy not enabled";
// 
export const SPF_ALL_TAG = "Used as the rightmost mechanism in a record to provide an explicit default.";
export const SPF_INCLUDE_TAG = "Allows the inclusion of another domain or sub domain's entire spf recor.";
export const SPF_IP4_TAG = "Specifies an IPv4 IP address (1.2.3.4) or IP CIDR Range (1.2.3.4/32) that is allowed to send mail for the domain.";
export const SPF_IP6_TAG = "Specifies an IPv6 IP Address (2001:0db8:0123:4567:89ab:cdef:1234:5678) or IP CIDR Range (2001:0db8:0123::/36) that is allowed to send mail for the domain.";
export const SPF_A_TAG = "This mechanism matches if <ip> is one of the <target-name>'s IP addresses."
export const SPF_MX_TAG = " This mechanism matches if <ip> is one of the MX hosts for a domain name.";
export const SPF_PTR_TAG = "This mechanism tests whether the DNS reverse-mapping for <ip> exists and correctly points to a domain name within a particular domain.";
export const SPF_EXISTS_TAG = "This mechanism is used to construct an arbitrary domain name that is used for a DNS A record query";
export const SPF_REDIRECT_TAG = "The SPF record for domain replaces the current record.";
export const SPF_EXP_TAG = "Explanation if an SMTP receiver rejects a message.";
export const SPF_RECORD_PUBLISHED_SUCCESS = "SPF Record found";
export const SPF_RECORD_PUBLISHED_FAIL = "SPF Record not found";
export const SPF_AUTHENTICAION_SUCCESS = "SPF Passed for IP";
export const SPF_AUTHENTICAION_FAIL = "SPF did not pass for IP";
export const SPF_DOMAIN_ALIGNED_SUCCESS = "Domain found in SPF";
export const SPF_DOMAIN_ALIGNED_FAIL = "Domain not found in SPF";
export const SPF_VALID_SYNTAX_SUCCESS = "SPF record is valid";
export const SPF_VALID_SYNTAX_FAIL = "SPF record is not valid";
export const SPF_VALID_NO_CHARS_AFTER_ALL_SUCCESS = "No items after 'ALL'.";
export const SPF_VALID_NO_CHARS_AFTER_ALL_FAIL = "Found items after 'ALL'";
export const SPF_VALID_NUM_OF_LOOKUPS_SUCCESS = "Number of included lookups is OK";
export const SPF_VALID_NUM_OF_LOOKUPS_FAIL = "Number of included lookups is NOT OK(over 10)";
export const SPF_VALID_LENGTH_SUCCESS = "Record length is OK";
export const SPF_VALID_LENGTH_FAIL = "Record length is NOT OK";
export const SPF_VALID_NO_PTR_FOUND_SUCCESS = "No type PTR found";
export const SPF_VALID_NO_PTR_FOUND_FAIL = "Type PTR found";
export const SPF_VALID_NO_ANY_PASS_MECHANISM_SUCCESS = "Any pass mechanism (+all) not found. Using +all is discouraged";
export const SPF_VALID_NO_ANY_PASS_MECHANISM_FAIL = "Any pass mechanism (+all) found. Using +all is discouraged";
// 
export const DKIM_A_TAG = "Cryptographic algorithm used to generate the signature.";
export const DKIM_V_TAG = "Version";
export const DKIM_Q_TAG = "A colon-separated list of query methods used to retrieve the public key";
export const DKIM_D_TAG = "Domain used with the selector record (s=) to locate the public key.";
export const DKIM_S_TAG = "Selector record name used with the domain to locate the public key in DNS.";
export const DKIM_H_TAG = "List of headers that will be used in the signing algorithm to create the hash found in the b = tag.";
export const DKIM_BH_TAG = "Computed hash of the message body.";
export const DKIM_B_TAG = "Cryptographic signature of the headers listed in the h= tag.";
export const DKIM_T_TAG = "DKIM signature timestamp.";
export const DKIM_X_TAG = "DKIM signature expiration time.";
export const DKIM_C_TAG = "Canonicalization algorithm that defines to a mailbox provider what level of modifications may be present as the email is in transit to the mailbox provider.";
export const DKIM_I_TAG = "Identity of the user or agent";
export const DKIM_L_TAG = "Number of characters from the message body that were used to compute the body hash (bh=).";
export const DKIM_Z_TAG = "List of the message's original headers and may differ from the headers listed in the h= tag.";
export const DKIM_PR_P_TAG = "Public key. The syntax and semantics of this tag value before being encoded in base64 are defined by the (k) tag.";
export const DKIM_PR_K_TAG = "The type of the key used by tag (p).";
export const DKIM_PR_V_TAG = "Identifies the record retrieved as a DKIM record. It must be the first tag in the record.";
export const DKIM_PR_T_TAG = "Indicates the domain is testing DKIM or is enforcing a domain match in the signature header between the 'i=' and 'd=' tags";
export const DKIM_PR_G_TAG = "Granularity of the public key";
export const DKIM_PR_H_TAG = "Indicates which hash algorithms are acceptable";
export const DKIM_PR_N_TAG = "Note field intended for administrators, not end users";
export const DKIM_PR_S_TAG = "Indicates the service type to which this record applies";
export const DKIM_RECORD_PUBLISHED_SUCCESS = "DKIM Record found";
export const DKIM_RECORD_PUBLISHED_FAIL = "DKIM Record not found";
export const DKIM_VALID_RECORD_SYNTAX_SUCCESS = "The record is valid";
export const DKIM_VALID_RECORD_SYNTAX_FAIL = "The record is not valid";
export const DKIM_PUBLIC_KEY_PRESENT_SUCCESS = "Public key is present";
export const DKIM_PUBLIC_KEY_PRESENT_FAIL = "Public key is not present";
export const DKIM_VALID_SIGNATURE_SYNTAX_SUCCESS = "The signature is valid";
export const DKIM_VALID_SIGNATURE_SYNTAX_FAIL= "The signature is not valid";
export const DKIM_DUPLICATE_TAGS_SUCCESS = "Signature tags are unique";
export const DKIM_DUPLICATE_TAGS_FAIL = "Signature tags are not unique";
export const DKIM_SIGNATURE_NOT_EXPIRED_SUCCESS = "The signature is not expired";
export const DKIM_SIGNATURE_NOT_EXPIRED_FAIL = "The signature is expired";
export const DKIM_BODY_HASH_VERIFIED_SUCCESS = "Body hash verified";
export const DKIM_BODY_HASH_VERIFIED_FAIL = "Body hash not verified";
export const DKIM_SIGNATURE_ALIGNED_SUCCESS = "Signature domain aligned.";
export const DKIM_SIGNATURE_ALIGNED_FAIL = "Signature domain not aligned.";

